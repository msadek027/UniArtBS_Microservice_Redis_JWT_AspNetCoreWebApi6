{
  "openapi": "3.0.1",
  "info": {
    "title": "Another API",
    "version": "v2"
  },
  "paths": {
    "/api/Login/Authentication": {
      "post": {
        "tags": [
          "Login"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Password",
                  "UserName"
                ],
                "type": "object",
                "properties": {
                  "UserName": {
                    "type": "string"
                  },
                  "Password": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "UserName": {
                  "style": "form"
                },
                "Password": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Login/refresh": {
      "post": {
        "tags": [
          "Login"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenBEO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenBEO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenBEO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/StageSetup/GetGenerateStageSetupList": {
      "get": {
        "tags": [
          "StageSetup"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/StageSetup/GetStageSetup": {
      "get": {
        "tags": [
          "StageSetup"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stageId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/StageSetup/PostStageSetup": {
      "post": {
        "tags": [
          "StageSetup"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StageSetupBEO"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StageSetupBEO"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StageSetupBEO"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/StageSetup/PostStageSetupUpdate": {
      "post": {
        "tags": [
          "StageSetup"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StageSetupBEO"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StageSetupBEO"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StageSetupBEO"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/WorkflowCreation/GetWorkflowList": {
      "get": {
        "tags": [
          "WorkflowCreation"
        ],
        "parameters": [
          {
            "name": "CategoryId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "searchAttribute",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/WorkflowCreation/PostWorkflow": {
      "post": {
        "tags": [
          "WorkflowCreation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowCreationBEO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowCreationBEO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowCreationBEO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RefreshTokenBEO": {
        "required": [
          "refreshToken",
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "minLength": 1,
            "type": "string"
          },
          "refreshToken": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "StageSetupBEO": {
        "type": "object",
        "properties": {
          "stageSL": {
            "type": "string",
            "nullable": true
          },
          "stageId": {
            "type": "string",
            "nullable": true
          },
          "stageName": {
            "type": "string",
            "nullable": true
          },
          "haveMk": {
            "type": "boolean"
          },
          "haveCk": {
            "type": "boolean"
          },
          "notifyMk": {
            "type": "boolean"
          },
          "notifyCk": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "categoryId": {
            "type": "string",
            "nullable": true
          },
          "workflowId": {
            "type": "string",
            "nullable": true
          },
          "numberOfStage": {
            "type": "integer",
            "format": "int32"
          },
          "positionX": {
            "type": "integer",
            "format": "int32"
          },
          "positionY": {
            "type": "integer",
            "format": "int32"
          },
          "stageMapPosition": {
            "type": "string",
            "nullable": true
          },
          "nextStage": {
            "type": "string",
            "nullable": true
          },
          "setEmployeeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowCreationBEO": {
        "type": "object",
        "properties": {
          "sl": {
            "type": "string",
            "nullable": true
          },
          "workflowId": {
            "type": "string",
            "nullable": true
          },
          "workflowName": {
            "type": "string",
            "nullable": true
          },
          "numberOfStage": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "categoryId": {
            "type": "string",
            "nullable": true
          },
          "fileDirectory": {
            "type": "string",
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "setEmployeeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 1safsfsdfdfd\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}